  static Future<void> exportDatabase() async {
    try {
      final deviceInfo = DeviceInfoPlugin();
      final androidInfo = await deviceInfo.androidInfo;
      final androidVersion = androidInfo.version.sdkInt;

      if (androidVersion >= 30) {
        final status = await Permission.manageExternalStorage.status;
        if (!status.isGranted) {
          await openAppSettings();
          throw Exception('Please grant storage permission from settings');
        }
      } else {
        final status = await Permission.storage.status;
        if (!status.isGranted) {
          await openAppSettings();
          throw Exception('Please grant storage permission from settings');
        }
      }

      // Get the database file
      final dbPath = await getDatabasesPath();
      final dbFile = File(join(dbPath, 'outwork.db'));

      if (!await dbFile.exists()) {
        throw Exception('Database file not found');
      }

      // Get the downloads directory
      final downloadPath = '/storage/emulated/0/Download';
      final downloadDir = Directory(downloadPath);
      if (!await downloadDir.exists()) {
        await downloadDir.create(recursive: true);
      }

      // Create backup file in downloads folder
      final timestamp = DateTime.now().toIso8601String().replaceAll(':', '-');
      final backupPath = join(downloadPath, 'outwork_backup_$timestamp.db');
      await dbFile.copy(backupPath);

      print('Database exported to: $backupPath');
    } catch (e) {
      print('Error in exportDatabase: $e');
      rethrow;
    }
  }